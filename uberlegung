2 5 3 start
1 4
---
1 2 5 3 a, then rotate
2 5 3 1 a
4 b
---
static void	merge_to_b(t_stack *stack_a, t_stack *stack_b)
{
	if (stack_b->stack[0] > stack_a->stack[0])
	{
		pb_wrapper(stack_a->stack, stack_b->stack,
			&(stack_a->height), &(stack_b->height));
		rb_wrapper(stack_b->stack, stack_b->height);
	}
	if (stack_b->stack[0] < stack_a->stack[0])
		rb_wrapper(stack_b->stack, stack_b->height);
	while (stack_b->stack[stack_b->height - 1] <= stack_b->stack[0])
	{
		if (stack_b->stack[0] > stack_a->stack[0])
			pb_wrapper(stack_a->stack, stack_b->stack,
				&(stack_a->height), &(stack_b->height));
		rb_wrapper(stack_b->stack, stack_b->height);
	}
	while (stack_b->stack[stack_b->height - 1] <= stack_a->stack[0])
	{
		pb_wrapper(stack_a->stack, stack_b->stack,
			&(stack_a->height), &(stack_b->height));
		rb_wrapper(stack_b->stack, stack_b->height);
	}
}